Lista pinagems rfm95

MISO ---- GPIO15
MOS1 ---- GPIO2
SCK ---- GPIO0
NSS ---- GPIO4
RESET ---- GPIO5
DI0 ----- GPIO12
3.3V --- GPIO14
ANTENA -- REST

#include <SPI.h>
#include <LoRa.h> 

#define SCK     18
#define MISO    19
#define MOSI    23
#define SS      5
#define RST     14
#define DI0     2
#define BAND  915E6

#define AMARELO 25
#define PRETO 33
#define VERDE 32
#define LARANJA 15

int flag = 0, a = 0;

void direcaoUm() {
  /*
   * Amarelo - H
   * Preto - L
   * Verde - L
   * Laranja - H
   */
  digitalWrite(AMARELO,HIGH);
  digitalWrite(PRETO,LOW);
  digitalWrite(VERDE,LOW);
  digitalWrite(LARANJA,HIGH);
}

void direcaoDois() {
  /*
   * Amarelo - L
   * Preto - H
   * Verde - H
   * Laranja - L
   */
  digitalWrite(AMARELO,LOW);
  digitalWrite(PRETO,HIGH);
  digitalWrite(VERDE,HIGH);
  digitalWrite(LARANJA,LOW);
}

void off() {
   /*
   * Amarelo - L
   * Preto - H
   * Verde - L
   * Laranja - H
   */
  digitalWrite(AMARELO,LOW);
  digitalWrite(PRETO,HIGH);
  digitalWrite(VERDE,LOW);
  digitalWrite(LARANJA,HIGH);
}

void setup() {
  
  delay(2500);
  Serial.begin(115200);
  while(!Serial);
  
  pinMode(AMARELO,OUTPUT);
  pinMode(PRETO,OUTPUT);
  pinMode(VERDE,OUTPUT);
  pinMode(LARANJA,OUTPUT);
  off();
  
  Serial.println("LoRa Sender");
  
  //SPI.begin(SCK,MISO,MOSI,SS);
  LoRa.setPins(SS,RST,DI0);
  
  if(!LoRa.begin(915E6)) {
    Serial.println("Starting LoRa failed!");
    while (1);
  }
  Serial.println("init ok");

  delay(1000);
}

void loop() {
  //LoRa.endPacket(false), espera o receiver receber pra poder transmitir
  //LoRa.endPacket(true), transmite sem esperar
  Serial.println(flag);
  LoRa.beginPacket();
  LoRa.print(flag);
  LoRa.endPacket();
  
  /*
  direcaoUm();
  delay(30);
  
  off();
  delay(1000);
  
  direcaoDois();
  delay(30);
  
  off();
  delay(1000);
  
  delay(3000); 
  */
  flag++;
  delay(2000);
              
}